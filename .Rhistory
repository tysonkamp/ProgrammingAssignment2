local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
q()
pwd
ls
!pwd
x <- list(a=1:5,b=rnorm(10))
x
lapply(x,mean)
x <- matrix(1:144, rows=12, cols=12)
x <- matrix(1:144, 12, 12)
x
x[,1]
x[,4]
lapply(x,print)
lapply(x,sqrt)
lapply(x[,12],sqrt)
x <- matrix(rnorm(200), 12, 12)
x <- matrix(rnorm(144), 12, 12)
x
x <- matrix(rnorm(144)*144, 12, 12)
x
x <- matrix(rand(), 12, 12)
x <- matrix(random(), 12, 12)
x <- matrix(abs(rnorm(144)), 12, 12)
x
x <- matrix(abs(rnorm(144))*144, 12, 12)
x
x <- matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,mean)
apply(x,1,median)
apply(x,1,quantile, probs=c(0.25,0.75))
x <- matrix(abs(rnorm(144))*144, 12, 12)
apply(x,1,quantile, probs=c(0.25,0.75))
rnorm(2*2*10)
rnorm(40)
a <- array(rnorm(2*2*10),c(2,2,10))
a
array(rnorm(2*2*10),c(2,2,10))
array(rnorm(2*2*10),c(2,2,11))
array(rnorm(1),c(2,2,10))
array(rnorm(40),c(2,2,10))
plot()
plot(1,1)
t <- array(rnorm(20),c(10,2))
plot(t)
t
plot(rnorm(40))
plot(rnorm(40)/2.0)
plot(rnorm(400)/2.0)
plot(rnorm(400))
library(datasets)
data(iris)
iris
?iris
iris[,virginica]
?iris
iris$Species
iris$Sepal.Length
iris$Sepal.Length[Species="virginica"]
iris$Sepal.Length[Species="virginica"]
iris.length[Species="virginica"]
iris$Sepal.length[Species="virginica"]
iris[Species="virginica"]
iris[[Species="virginica"]]
iris
iris$Sepal.Length
iris$Sepal.Length
iris[species="virginica"]
iris[Species="virginica"]
iris.Sepal.Length
iris$Sepal.Length
iris[Sepal.Length]
iris[[Sepal.Length]]
iris$Sepal.Length
iris$Sepal.Length[[iris$Species="virginica"]]
iris$Sepal.Length[[iris$Species=="virginica"]]
iris$Species=="virginica"
virg <- iris$Species=="virginica"
iris$Sepal.Length[virg]
mean(iris$Sepal.Length[virg])
head iris
head(iris)
iris[,1:4]
mean(iris$Sepal.Length)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
mtcars
mtcars$cyl==8
mtcars$mpg[mtcars$cyl==8]
mean(mtcars$mpg[mtcars$cyl==8])
rnorm(10)
runif(10)
rnorm(10,1)
gl(3,10)
summary(mtcars)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars, mtcars$cyl),mean)
sapply(split(mtcars$mpg, mtcars$cyl),mean)
cbc <- split(mtcars, mtcars$cyl)
cbc
cbc$4
cbc[1]
split(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)
$runif
?runif
runif(10)
runif(10,0,1)
runif(10,0,10)
rnorm(10,0,10)
$rnorm
?rnorm
rnorm(10,5,1)
rnorm(100,5,1)
plot(rnorm(100,5,1))
plot(rnorm(1000,5,1))
plot(rnorm(10000,5,1))
plot(rnorm(10000,5,1))
plot(rnorm(20000,5,1))
plot(rnorm(20000,5,1.5))
plot(rnorm(20000,5,0.5))
plot(rnorm(20000,5,0.1))
plot(rnorm(20000,5,1))
?rnorm
mean(rnorm(1))
mean(rnorm(1))
mean(rnorm(1))
mean(rnorm(10))
mean(rnorm(10))
mean(rnorm(10000))
mean(rnorm(10000))
mean(rnorm(10000))
c(rnorm(10),runif(10,0,100),rnorm(10,5))
?tapply
mtcars
iris
split(iris,Species)
split(iris$Sepal.Lengt,iris$Species)
split(iris$Sepal.Lengt,iris$Species)$setosa
split(iris$Sepal.Length,iris$Species)$setosa
mean(split(iris$Sepal.Length,iris$Species)$setosa)
lapply(split(iris$Sepal.Length,iris$Species)$setosa,mean)
mean(split(iris$Sepal.Length,iris$Species)$setosa)
iris$Sepal.Length[iris$Species=="setosa"]
mean(iris$Sepal.Length[iris$Species=="setosa"])
mean(split(iris$Sepal.Length,iris$Species))
lappy(split(iris$Sepal.Length,iris$Species),mean)
lapply(split(iris$Sepal.Length,iris$Species),mean)
split(iris$Sepal.Length,iris$Species)
library(datasets)
airquality
split(airquality$Temp,airquality$Month)
lapply(split(airquality$Temp,airquality$Month),mean)
lapply(split(airquality$Temp,airquality$Month),range)
?ls
ls()
debug(ls)
ls()
?
help
step
exit
quit
stop
end
exit
quit()
?message
stop()
where
undebug()
undebug(ls)
?ls
debug(ls)
ls
log(NaN)
log(-1)
?save
list(rep(1,4), rep(2,3), rep(3,2), rep(4,1))
mapply(1:4,4:1,rep)
mapply(rep,1:4,4:1)
log(2,10)
log(10,2)
mapply(log,c(2,10),c(10,2))
mapply(log,1:1000,1000:1
)
mapply(log,1:10000,10000:1)
enddebug()
endDebug(ls)
stopDebug(ls)
undebug(ls)
?stop debugging
ls
ls()
exit
quit
endbrowse
endbrowse()
q()
()
Q()
;
Q(browse)
endebug(ls)
soruce(VectorHelper.R)
source(VectorHelper.R)
source("VectorHelper.R"")
q
;
)
""
source("VectorHelper.R")
source("VectorHelper")
dir
dir()
setwd("C:\Users\Tyson_Kamp\Documents\Personal\Courses\ProgrammingAssignment2")
setwd("C:\\Users\\Tyson_Kamp\\Documents\\Personal\\Courses\\ProgrammingAssignment2")
dir()
source("VectorHelper")
source("VectorHelper.R")
tVect <- c(1,2,3,4,5,6)
mean(tVect)
cachemean(tVect)
cachemean(5)
makeVextor(tVect)
makeVector(tVect)
tVect <- c(1:1000000)
mean(tVect)
tVect <- c(1:10000000)
mean(tVect)
v <- makeVector(tVect)
v$get()
cachemean(tVect)
v <- makeVector(25000:50000)
cachemean(tVect)
cachemean(v)
?solve
myMat <- matrix(1:9,3,3)
myMat
source("cachematrix.R")
mat <- makeCacheMatrix(myMat)
cacheSolve(mat)
solve(mat)
myMat <- matrix(c(1,1,1,1,1,1,1,1,1),3,3)
solve(myMat)
myMat <- matrix(c(1,1,1,1),2,2)
solve(myMat)
myMat <- matrix(c(1,0,0,1),2,2)
myMat
solve(myMat)
solve(myMat)
mcm <- makeCacheMatrix(myMat)
cacheSolve(mcm)
cacheSolve(mcm)
source("cachematrix.R")
myMat <- matrix(c(1,0,0,1),2,2)
makeCacheMatrix(myMat)
mcm <- makeCacheMatrix(myMat)
cacheSolve(mcm)
cacheSolve(mcm)
myMat <- matrix(c(1,1,1,2,0,2,2,1,1),3,3)
mcm <- makeCacheMatrix(myMat)
cacheSolve(mcm)
cacheSolve(mcm)
